name: "lenet_cifar10_batch_renormalization"
# Note: it is different from original lenet

layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "examples/cifar10/2parts/skewed/mean.binaryproto.0"
  }
  data_param {
    source: "examples/cifar10/2parts/skewed/cifar10_train_lmdb.%"
    batch_size: 50
    backend: LMDB
  }
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "examples/cifar10/2parts/skewed/mean.binaryproto.0"
  }
  data_param {
    source: "examples/cifar10/2parts/skewed/cifar10_test_lmdb.%"
    batch_size: 50
    backend: LMDB
  }
}


layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    bias_term: false
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "bn1"
  type: "BatchReNorm"
  bottom: "pool1"
  top: "bn1"
  top: "bn1/tmp1"
  top: "bn1/tmp2"
  top: "bn1/tmp3"
  top: "bn1/tmp4"
  batch_renorm_param {
    step_to_init: 15000
    step_to_r_max: 40000
    step_to_d_max: 30000
    r_max: 4
    d_max: 6
    moving_average_fraction: 0.0001
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "bn1"
  top: "Sigmoid1"
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "Sigmoid1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    bias_term: false
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}

layer {
  name: "bn2"
  type: "BatchReNorm"
  bottom: "conv2"
  top: "bn2"
  top: "bn2/tmp1"
  top: "bn2/tmp2"
  top: "bn2/tmp3"
  top: "bn2/tmp4"
  batch_renorm_param {
    step_to_init: 15000
    step_to_r_max: 40000
    step_to_d_max: 30000
    r_max: 4
    d_max: 6
    moving_average_fraction: 0.0001
  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "bn2"
  top: "Sigmoid2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "Sigmoid2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    bias_term: false
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}

layer {
  name: "bn3"
  type: "BatchReNorm"
  bottom: "conv3"
  top: "bn3"
  top: "bn3/tmp1"
  top: "bn3/tmp2"
  top: "bn3/tmp3"
  top: "bn3/tmp4"
  batch_renorm_param {
    step_to_init: 15000
    step_to_r_max: 40000
    step_to_d_max: 30000
    r_max: 4
    d_max: 6
    moving_average_fraction: 0.0001
  }  
}

layer {
  name: "relu3"
  type: "ReLU"
  bottom: "bn3"
  top: "Sigmoid3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "Sigmoid3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
  include {
    phase: TRAIN
  }
}
